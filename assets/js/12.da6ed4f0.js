(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{410:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",[a("p",[t._v(" 基于SpringBoot 的参数校验组件（告别HibernateValidator，享受私家定制）")]),t._v(" "),a("p",[t._v("ShanHaiFormRules-based SpringBoot Parameter Rules Check Component")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/SeeMountainSea/shanhai-formrules-spring-boot-starter\n/releases/latest"}},[a("img",{attrs:{alt:"GitHub release (latest by date)",src:"https://img.shields.io/github/v/release/SeeMountainSea/shanhai-formrules-spring-boot-starter"}})]),t._v(" "),a("a",{attrs:{href:"https://github.com/SeeMountainSea/shanhai-formrules-spring-boot-starter\n/issues"}},[a("img",{attrs:{alt:"GitHub closed issues",src:"https://img.shields.io/github/issues/SeeMountainSea/shanhai-formrules-spring-boot-starter?color=009688"}})]),t._v(" "),a("a",{attrs:{href:"https://github.com/topics/java"}},[a("img",{attrs:{alt:"GitHub top language",src:"https://img.shields.io/github/languages/top/SeeMountainSea/shanhai-formrules-spring-boot-starter?color=eb8031"}})]),t._v(" "),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/SeeMountainSea/shanhai-formrules-spring-boot-starter\n/find/master"}},[a("img",{attrs:{alt:"GitHub Code Size",src:"https://img.shields.io/github/languages/code-size/SeeMountainSea/shanhai-formrules-spring-boot-starter?color=795548"}})]),t._v(" "),a("a",{attrs:{href:"https://github.com/SeeMountainSea/shanhai-formrules-spring-boot-starter\n/find/master"}},[a("img",{attrs:{alt:"GitHub Code Lines",src:"https://img.shields.io/tokei/lines/github/SeeMountainSea/shanhai-formrules-spring-boot-starter?color=37474F"}})]),t._v(" "),a("a",{attrs:{href:"https://github.com/SeeMountainSea/shanhai-formrules-spring-boot-starter\nr/blob/master/LICENSE"}},[a("img",{attrs:{alt:"GitHub License",src:"https://img.shields.io/github/license/SeeMountainSea/shanhai-formrules-spring-boot-starter?color=534BAE"}})])])]),t._v(" "),a("h2",{attrs:{id:"组件能力"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件能力"}},[t._v("#")]),t._v(" 组件能力")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("支持注解方式执行参数检验（类似ElementUI-validator风格）。")])]),t._v(" "),a("li",[a("p",[t._v("提供较为常用的规则实现，同时提供了自定义规则扩展能力，")]),t._v(" "),a("p",[t._v("告别Hibernate validator 分组方式无法高度定制多API共享入参的情况。")])])]),t._v(" "),a("h2",{attrs:{id:"_1-引入依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入依赖"}},[t._v("#")]),t._v(" 1.引入依赖")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[t._v("      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.wangshanhai.formrules"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("shanhai-formrules-spring-boot-starter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.0.1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-启用shanhiformrules-组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-启用shanhiformrules-组件"}},[t._v("#")]),t._v(" 2.启用ShanHiFormRules 组件")]),t._v(" "),a("p",[t._v("使用注解@EnableShanHiFormRules即可启用ShanHiFormRules 组件")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableShanHiFormRules")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_3-校验组件详细说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-校验组件详细说明"}},[t._v("#")]),t._v(" 3.校验组件详细说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("注解")]),t._v(" "),a("th",[t._v("用途")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("@ShanHaiForm")]),t._v(" "),a("td",[t._v("标记该方法需要进行参数校验")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("@FormRule")]),t._v(" "),a("td",[t._v("标记需要校验的对象")]),t._v(" "),a("td",[t._v("target：对象名称，即方法中的变量名 "),a("br"),t._v("rules:规则集合"),a("br"),t._v("enable: 是否启用该规则（默认启用）")])]),t._v(" "),a("tr",[a("td",[t._v("@Rule")]),t._v(" "),a("td",[t._v("规则定义")]),t._v(" "),a("td",[t._v("ruleType 支持："),a("br"),t._v(" 非空校验  : RuleCollect.NOT_EMPTY "),a("br"),t._v(" 正则校验: RuleCollect.REG_EXP; "),a("br"),t._v(" 字符串长度校验: RuleCollect.STR_LENTH  "),a("br"),t._v(" 枚举校验: RuleCollect.ENUM;")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-非空校验-rulecollect-not-empty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-非空校验-rulecollect-not-empty"}},[t._v("#")]),t._v(" 3.1 非空校验（RuleCollect.NOT_EMPTY）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("   "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ShanHaiForm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FormRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rulesForm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Rule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ruleType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleCollect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NOT_EMPTY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("scanFields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("errorCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数不能为空！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restRules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RulesForm")]),t._v(" rulesForm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("scanFields ：支持* 或者某个字段或者嵌套对象的字段，例如（form.zhangsan）。嵌套对象必须有明确的类型定义，否则无法支持嵌套对象的输入校验。")]),t._v(" "),a("p",[t._v("errorCode：异常编码")]),t._v(" "),a("p",[t._v("message：异常提示")]),t._v(" "),a("p",[t._v("对于存在异常的，会抛出如下异常：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpFormRulesException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("自己可以自行进行解析和输出。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-正则校验-rulecollect-reg-exp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-正则校验-rulecollect-reg-exp"}},[t._v("#")]),t._v(" 3.2 正则校验（RuleCollect.REG_EXP）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("   "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ShanHaiForm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FormRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rulesForm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Rule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ruleType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleCollect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REG_EXP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("scanFields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"projectType"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" regExp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExpCollect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NUMBER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("errorCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不符合格式要求！"')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restRules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RulesForm")]),t._v(" rulesForm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("regExp: 正则表达式，可以使用内置的一些常用正则，例如：RegExpCollect.NUMBER，也可以自己写符合自己需要的正则表达式。")]),t._v(" "),a("h3",{attrs:{id:"_3-3-字符串长度校验-rulecollect-str-lenth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-字符串长度校验-rulecollect-str-lenth"}},[t._v("#")]),t._v(" 3.3 字符串长度校验（RuleCollect.STR_LENTH）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("   "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ShanHaiForm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FormRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rulesForm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Rule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ruleType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleCollect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STR_LENTH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("scanFields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"projectType"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("errorCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不符合长度要求！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restRules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RulesForm")]),t._v(" rulesForm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("min: 字符串最小长度")]),t._v(" "),a("p",[t._v("max:字符串最大长度")]),t._v(" "),a("p",[t._v("len: 字符串固定长度")]),t._v(" "),a("h3",{attrs:{id:"_3-4-枚举校验-rulecollect-enum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-枚举校验-rulecollect-enum"}},[t._v("#")]),t._v(" 3.4 枚举校验（RuleCollect.ENUM）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("     "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ShanHaiForm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@FormRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rulesForm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rules "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Rule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ruleType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleCollect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("scanFields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"projectType"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enums "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("errorCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1002")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不符合格式要求！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restRules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RulesForm")]),t._v(" rulesForm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("enums：枚举白名单")]),t._v(" "),a("h3",{attrs:{id:"_3-5-扩展自己的校验方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-扩展自己的校验方法"}},[t._v("#")]),t._v(" 3.5 扩展自己的校验方法")]),t._v(" "),a("p",[t._v("通过实现RuleScanService，并注册自己的规则到Spring容器中，即可实现自定义校验规则。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@Service\npublic class XXXRule implements RuleScanService{\n    /**\n     * 注册规则定义\n     * @return\n     */\n    @Override\n    public String getScanType() {\n        //TODO 注册自己的校验类型（可参考RuleCollect）\n        return XXXCollect.XXX; \n    }\n    /**\n     *  扫描目标对象\n     * @param target 目标对象实例\n     * @param scanFields 目标对象扫描字段 \n     * @param execTarget 目标方法信息（跟踪日志使用）\n     * @param rule 规则定义\n     */\n    @Override\n    public void scanByScope(Object target, List<String> scanFields, String execTarget, Rule rule) {\n       //TODO 实现自己的校验方法\n       //当不符合预期时，使用throw new HttpFormRulesException()方式抛出异常\n    }\n}\n")])])]),a("h3",{attrs:{id:"_3-6-rule-参数scanfields详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-rule-参数scanfields详解"}},[t._v("#")]),t._v(" 3.6    @Rule 参数scanFields详解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("scanFields字段范围")]),t._v(" "),a("th",[t._v("支持情况")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("支持自动推导当前对象以及当前对象的嵌套对象内的全部字段")])]),t._v(" "),a("tr",[a("td",[t._v("currentObjField")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("支持自动获取当前对象的全部字段信息")])]),t._v(" "),a("tr",[a("td",[t._v("currentObjField.child")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("支持自动解析嵌套对象的全部字段信息")])]),t._v(" "),a("tr",[a("td",[t._v("currentObjField.child.child")]),t._v(" "),a("td",[t._v("支持")]),t._v(" "),a("td",[t._v("支持自动解析嵌套对象的嵌套对象的全部字段信息")])])])]),t._v(" "),a("p",[a("strong",[t._v("注：如果参数为Map/JSONObject等没有明确字段定义的，不适用于本组件。")])]),t._v(" "),a("p",[t._v("scanFields 如果为多个，使用,做分隔即可。如果scanFields中定义的字段在Object target 中不存在，则会被直接丢弃。")]),t._v(" "),a("p",[t._v("获取当前对象的某个字段的值，示例如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Object value= ObjectUtils.getFieldValueByName(target,field);\n")])])]),a("h2",{attrs:{id:"_4-基于redis的分布式锁组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-基于redis的分布式锁组件"}},[t._v("#")]),t._v(" 4.基于Redis的分布式锁组件")]),t._v(" "),a("h3",{attrs:{id:"_4-1-启用组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-启用组件"}},[t._v("#")]),t._v(" 4.1 启用组件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@EnableShanHiReqLock\n@Configuration\npublic class AppConfig {\n}\n")])])]),a("h3",{attrs:{id:"_4-2-基于redisson的redlock实现的分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-基于redisson的redlock实现的分布式锁"}},[t._v("#")]),t._v(" 4.2 基于redisson的RedLock实现的分布式锁")]),t._v(" "),a("p",[t._v("新增配置文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shanhai")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("reqlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redisson\n")])])]),a("p",[t._v("配置RedissonClient对应的bean,示例如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('@EnableShanHiReqLock\n@Configuration\npublic class AppConfig {\n    /**\n     * 使用默认分布式锁策略，需要自行初始化RedissonClient对象\n     * @return\n     */\n    @Bean\n    public RedissonClient createClient() {\n        Config config = new Config();\n        config.useSingleServer().setAddress("redis://127.0.0.1:6379")\n                .setDatabase(2);\n        Logger.info(("[RedissonClient]-单实例模式"));\n        return  Redisson.create(config);\n    };\n}\n')])])]),a("h3",{attrs:{id:"_4-3-使用分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-使用分布式锁"}},[t._v("#")]),t._v(" 4.3 使用分布式锁")]),t._v(" "),a("p",[t._v("在需要加锁的地方，使用 @ReqLock 注解即可，需要注意的时，如果使用多个变量做锁Key，则需要使用multiLockTarget 配置对应的锁 key对象。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('@RestController\n@RequestMapping("/req")\npublic class ReqLockController {\n    @GetMapping("/lock/{id}")\n    @ReqLock(lockTarget ="id",lockName = "demoLock",lockExpireTime = 100,lockTimeOut = 3)\n    public String lock(@PathVariable("id") Integer id) throws InterruptedException {\n      Thread.sleep(8000);\n      return "success:"+id;\n    }\n\n    @PostMapping("/lockMulti/{id}")\n    @ReqLock(multiLockTarget ={"id","childForm.projectName"},lockName = "demoMultiLock",lockExpireTime = 100,lockTimeOut = 3)\n    public String lockMulti(@PathVariable("id") Integer id,@RequestBody ChildForm childForm) throws InterruptedException {\n        Thread.sleep(8000);\n        return "success:"+id;\n    }\n\n}\n')])])]),a("p",[t._v("@ReqLock 主要参数如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('   /**\n     * 分布式锁分组名\n     * @return\n     */\n    String lockName();\n    /**\n     * 分布式锁Value生成策略\n     * @return\n     */\n    String lockValueStrategy() default "";\n\n    /**\n     * 分布式锁作用域（单一对象或某个对象的某个字段）\n     * @return\n     */\n    String lockTarget() default "";\n    /**\n     * 分布式锁作用域-多个作用域（每个为单一对象或某个对象的某个字段）\n     * @return\n     */\n    String [] multiLockTarget() default {};\n    /**\n     * 锁过期时间(单位:秒)\n     * @return\n     */\n    long lockExpireTime() default 120;\n    /**\n     * 锁获取超时时间 (单位:秒)\n     * @return\n     */\n    long lockTimeOut() default 5;\n')])])]),a("h3",{attrs:{id:"_4-4-自定义分布式锁实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-自定义分布式锁实现"}},[t._v("#")]),t._v(" 4.4 自定义分布式锁实现")]),t._v(" "),a("p",[t._v("自定义实现接口ShanhaiReqLock，即可完成自定义分布式锁实现，接口定义如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public interface ShanhaiReqLock {\n    /**\n     * 获取分布式锁\n     * @param reqLock 分布式锁定义\n     * @param extParams 分布式锁自定义参数（取自配置文件shanhai.reqlock.extParams）\n     * @param lockReqFlag 分布式锁加锁标识\n     * @return\n     */\n    public LockInfoDTO lock(ReqLock reqLock, Map<String, Object> extParams,String lockReqFlag);\n\n    /**\n     *  释放分布式锁\n     * @param lockInfoDTO\n     * @param reqLock\n     * @param extParams\n     */\n    public void unlock(LockInfoDTO lockInfoDTO,ReqLock reqLock, Map<String,Object> extParams);\n}\n\n")])])]),a("h2",{attrs:{id:"_5-基于sql的更新锁组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-基于sql的更新锁组件"}},[t._v("#")]),t._v(" 5.基于SQL的更新锁组件")]),t._v(" "),a("h3",{attrs:{id:"_5-1-启用组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-启用组件"}},[t._v("#")]),t._v(" 5.1 启用组件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@EnableShanHiSqlLock\n@Configuration\npublic class AppConfig {\n}\n")])])]),a("h3",{attrs:{id:"_5-2-使用组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-使用组件"}},[t._v("#")]),t._v(" 5.2 使用组件")]),t._v(" "),a("p",[t._v("新增配置：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("shanhai:\n  sqllock:\n    cacheType: redis\n")])])]),a("p",[t._v("使用默认缓存组件，定义组件缓存：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    /**\n     * 使用默认SQL锁缓存策略，需要自行初始化RedisTemplate对象\n     * @return\n     */\n    @Bean\n    @SuppressWarnings("all")\n    public RedisTemplate<String, Object> redisTemplate(RedisConnectionFactory factory) {\n        RedisTemplate<String, Object> template = new RedisTemplate<String, Object>();\n        template.setConnectionFactory(factory);\n        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);\n        ObjectMapper om = new ObjectMapper();\n        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);\n        jackson2JsonRedisSerializer.setObjectMapper(om);\n        StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();\n        template.setKeySerializer(stringRedisSerializer);\n        template.setHashKeySerializer(stringRedisSerializer);\n        template.setValueSerializer(jackson2JsonRedisSerializer);\n        template.setHashValueSerializer(jackson2JsonRedisSerializer);\n        template.afterPropertiesSet();\n        return template;\n    }\n')])])]),a("p",[t._v("使用SQL更新锁时，只需要添加注解：@SqlLock 即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('@RestController\n@RequestMapping("/sql")\npublic class SqlSockController {\n\n    @PostMapping("/lock/{id}")\n    @SqlLock(expressionValueTargets ={"id","childForm.projectName"},expression = "select id from t_sql_lock a where a.id={} and a.projectName={}")\n    public String lockMulti(@PathVariable("id") Integer id, @RequestBody ChildForm childForm) throws InterruptedException {\n        Thread.sleep(8000);\n        return "success:"+id;\n    }\n\n}\n')])])]),a("p",[t._v("@SqlLock 注解定义如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    /**\n     * SQL表达式\n     * @return\n     */\n    String expression();\n\n    /**\n     * SQL锁条件赋值字段\n     * @return\n     */\n    String [] expressionValueTargets() default {};\n\n    /**\n     * 是否启用缓存(默认：启用)\n     * @return\n     */\n    boolean cache() default true;\n\n    /**\n     * 缓存过期时间(默认：180s)\n     * @return\n     */\n    long    cacheExpire() default 180;\n")])])]),a("p",[t._v("如果SQLLock内的SQL表达式，在执行结果大于0时，则判定任务执行失败。")])])}),[],!1,null,null,null);a.default=e.exports}}]);